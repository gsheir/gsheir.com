services:
  web:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - POETRY_VENV_IN_PROJECT=0
      - POETRY_VIRTUALENVS_CREATE=false
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/.venv  # Exclude .venv directory from volume mount
    command: >
      sh -c "poetry install --only=main &&
             echo 'Waiting for database...' &&
             poetry run python manage.py makemigrations &&
             poetry run python manage.py migrate &&
             poetry run python manage.py runserver 0.0.0.0:8080"

  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
