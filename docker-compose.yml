services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - POETRY_VENV_IN_PROJECT=0
      - POETRY_VIRTUALENVS_CREATE=false
      - CSRF_TRUSTED_ORIGINS=http://localhost:8080
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/.venv  # Exclude .venv directory from volume mount
    
  sync_service:
    build: 
      context: .
      dockerfile: Dockerfile.sync_service
    env_file:
      - .env
    depends_on:
      - db
      - web
    
  round_processor:
    build: 
      context: .
      dockerfile: Dockerfile.round_processor
    env_file:
      - .env
    depends_on:
      - db
      - web
    

  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
